x-commons:
  ratelimit-headers: &ratelimit-headers
    X-RateLimit-Limit:
      $ref: '#/components/headers/X-RateLimit-Limit'
    X-RateLimit-Remaining:
      $ref: '#/components/headers/X-RateLimit-Remaining'
    X-RateLimit-Reset:
      $ref: '#/components/headers/X-RateLimit-Reset'
  common-responses: &common-responses
    '400':
      $ref: '#/components/responses/400BadRequest'      
    '422':
      $ref: '#/components/responses/422UnprocessableEntity'
    '429':
      $ref: '#/components/responses/429TooManyRequests'
    '503':
      $ref: '#/components/responses/503ServiceUnavailable'
    '500':
      $ref: '#/components/responses/500InternalServerError'
    default:
      $ref: '#/components/responses/default'

openapi: 3.0.3
info:
  termsOfService: http://terremoti.ingv.it/webservices_and_software
  contact:
    email: valentino.lauciani@ingv.it
    name: INGV - Valentino Lauciani
    url: http://terremoti.ingv.it/webservices_and_software
  description: "\n# Rate limit:\n  The **Rate Limit** and **Rate Reset**\
    \ are specified in the HTTP-header with `X-RateLimit-Limit` and `X-RateLimit-Reset`;\
    \ the rate limit is *per* `IP`."
  license:
    name: Creative Commons Attribution 4.0 International
    url: http://creativecommons.org/licenses/by/4.0/
  title: Apollo Web Services
  version: 2.10.0
  x-api-id: fa78e2be-826e-4451-8979-0a0dfd598dff
  x-logo: http://webservices.ingv.it/ingv_logo_text_two_lines.png
  x-summary: The hyp2000 web service bla bla bla
  x-sandbox: true
tags:
  - name: status
    description: "status api"
  - name: location
    description: "location api"
servers:
- url: http://caravel.int.ingv.it:8780/api/location
  description: production
  # 'x-sandbox' is needed to use 'http' instead of 'https'
  x-sandbox: true 
- url: http://{hostname}/api/location
  description: development
  # 'x-sandbox' is needed to use 'http' instead of 'https'
  x-sandbox: true 
  variables:
    hostname:
      enum:
        - 'localhost:8780'
        - 'caravel.int.ingv.it:8780'
      default: 'localhost:8780'
      
paths:
  /status:
    get:
      summary: Return the application status
      description: Return the application status
      operationId: get_status
      responses:
        <<: *common-responses
        '200':
          description: Operation successful
          headers:
            <<: *ratelimit-headers
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
          content:
            application/problem+json:
              schema:
                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/Problem'
              example: 
                status: 200
                title: OK
                detail: "The service is working properly"
      tags:
      - status

  /v2/station-hinv:
    get:
      description: Get "station file" line for hyp2000
      summary: Get "station file" line for hyp2000
      operationId: v2_getStation
      parameters:
        - $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/parameters/starttime'
        - $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/parameters/endtime'
        - $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/parameters/net__REQUIRED'
        - $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/parameters/sta__REQUIRED'
        - $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/parameters/cha__REQUIRED'
        - $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/parameters/loc'
      responses:
        <<: *common-responses
        '200':
          description: successful operation
      tags:
      - location

  /v2/hyp2000:
    post:
      description: "\n# Introduction\nHypoinverse is software used to Locate earthquakes\
        \ and determine magnitudes in a local or regional seismic network.\n\nMore info,\
        \ here: [https://www.usgs.gov/software/hypoinverse-earthquake-location](https://www.usgs.gov/software/hypoinverse-earthquake-location)\n\
        \nAt INGV we build stand-alone Docker to deploy \"hyp2000\" ([https://github.com/ingv/hyp2000](https://github.com/ingv/hyp2000))\
        \ and on top of this docker was build a Web Service.\n\n# Input\nThe input file\
        \ is a JSON with four sections: \n  - **HYP2000_CONF**: HYPOINVERS configuration\
        \ file (refer to manual for more details)\n  - **MODEL**: Crustal velocity model\n\
        \  - **OUTPUT**: It could be `json`, `prt`, `arc`, `sum`\n  - **TYPE_HYP2000ARC**:\
        \ An array of phases in **ew2openapi** format.\n\n# Output\nThe output could be\
        \ `json`, `prt`, `arc` or `sum`:\n  - `prt`: print format\n  - `arc`: archive\
        \ format\n  - `sum`: summary format\n  - `json`: NON STANDARD json format developed\
        \ in **ew2openapi**"
      summary: Hypoinverse 2000 API
      operationId: v2_postHyp2000
      requestBody:
        description: JSON to post
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    hyp2000_conf:
                      $ref: '#/components/schemas/ObjectHyp2000Conf'
                    model:
                      $ref: '#/components/schemas/ObjectHyp2000Model'
                    output:
                      $ref: '#/components/schemas/ObjectHyp2000Output'
                    phases:
                      type: array
                      items:
                        $ref: '#/components/schemas/ObjectHyp2000Phase'

      responses:
        <<: *common-responses
        '200':
          description: successful operation
          headers:
            <<: *ratelimit-headers
          content:
            application/json:
              schema:
                $ref: 'https://ingv.github.io/openapi/definitions_ew.yaml#/components/schemas/hyp2000arcSchema'
      tags:
      - location

  /v2/pyml:
    post:
      description: "To Do"
      summary: Hypoinverse 2000 API
      operationId: v2_postPyML
      requestBody:
        description: JSON to post
        required: true
        content:
          application/json:
            schema:
              properties:
                data:
                  properties:
                    output:
                      $ref: '#/components/schemas/ObjectPyMLOutput'
                    pyml_conf:
                      $ref: '#/components/schemas/ObjectPyMLConf'
                    origin:
                      $ref: '#/components/schemas/ObjectOrigin'
                    amplitudes:
                      type: array
                      items:
                        $ref: '#/components/schemas/ObjectPyMLAmplitude'

      responses:
        <<: *common-responses
        '200':
          description: Operation successful
          headers:
            <<: *ratelimit-headers
            Cache-Control:
              $ref: '#/components/headers/Cache-Control'
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      random_string:
                        type: string
                        description: Unique string
                        example: 20220420_132901__caravel.int.ingv.it__AWqYB
                      magnitudes:
                        properties:
                          hb:
                            properties:
                              ml:
                                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__mag'
                              std:  
                                type: number
                                format: double
                                example: 0.27839883752733147
                              totsta:
                                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__nsta'
                              usedsta:
                                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__nsta_used'
                          db:
                            properties:
                              ml:
                                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__mag'
                              std:  
                                type: number
                                format: double
                                example: 0.27839883752733147
                              totsta:
                                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__nsta'
                              usedsta:
                                $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__nsta_used'
                          ampmethod:
                            type: string
                            description: Amp method
                            example: ingv
                          magmethod:
                            type: string
                            description: To Do
                            example: meanamp
                          loopexitcondition:
                            type: string
                            description: To Do
                      stationmagnitudes:
                        items:
                          properties:
                            net:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__net'
                            sta:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__sta'
                            cha:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__cha'
                            loc:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__loc'
                            amp1:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__amp1'
                            time1:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__time1'
                            amp2:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__amp2'
                            time2:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__time2'
                            lat:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/latitude'
                            lon:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/longitude'
                            elev:
                              $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__elev'
                            hb:
                              properties:
                                ml:
                                  $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__mag'
                                w:  
                                  type: number
                                  format: double
                                  example: 0.27839883752733147
                            db:
                              properties:
                                ml:
                                  $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/magnitude__mag'
                                w:  
                                  type: number
                                  format: double
                                  example: 0.27839883752733147
                        type: array
      tags:
      - location
      
components:
  headers:
    Cache-Control:
      schema:
        type: string
    Retry-After:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/headers/Retry-After'
    X-RateLimit-Limit:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/headers/X-RateLimit-Limit'
    X-RateLimit-Reset:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/headers/X-RateLimit-Reset'
    X-RateLimit-Remaining:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/headers/X-RateLimit-Remaining'
  responses:
    204NoContent:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/204NoContent'
    400BadRequest:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/400BadRequest'
    401Unauthorized:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/401Unauthorized'
    403Forbidden:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/403Forbidden'      
    404NotFound:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/404NotFound'
    422UnprocessableEntity:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/422UnprocessableEntity'      
    429TooManyRequests:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/429TooManyRequests'
    500InternalServerError:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/500InternalServerError'
    503ServiceUnavailable:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/503ServiceUnavailable'
    default:
      $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/responses/default'
  schemas:
    ObjectOrigin:
      properties:
        lat:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/latitude'
        lon:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/longitude'
        depth:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/depth'
    ObjectPyMLConf:
      properties:
        preconditions:
          properties:
            theoretical_p:
              type: boolean
              example: true
              default: true
            theoretical_s:
              type: boolean
              example: true
              default: true
            delta_corner:
              type: integer
              format: int64
              example: 5.0
            max_lowcorner:
              type: integer
              format: int64
              example: 15.0
        station_magnitude:
          properties:
            delta_peaks:
              type: number
              format: float
              example: 1.0
            use_stcorr_hb:
              type: boolean
              example: true
              default: true
            use_stcorr_db:
              type: boolean
              example: true
              default: true
            when_no_stcorr_hb:
              type: boolean
              example: true
              default: true
            when_no_stcorr_db:
              type: boolean
              example: true
              default: true
        event_magnitude:
          properties:
            mindist:
              type: integer
              format: int64
              example: 10
            maxdist:
              type: integer
              format: int64
              example: 600
            hm_cutoff:
              example: [0.3,1.0]
            outliers_max_it:
              type: integer
              format: int64
              example: 10
            outliers_red_stop:
              type: number
              format: float
              example: 0.1
            outliers_nstd:
              type: integer
              format: int64
              example: 1
            outliers_cutoff:
              type: number
              format: float
              example: 0.1
    ObjectPyMLAmplitude:
      type: object
      required:
        - net
        - sta
        - cha
        - loc
        - amp1
        - time1
        - amp2
        - time2
      properties:
        net:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__net'
        sta:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__sta'
        cha:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__cha'
        loc:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__loc'
        amp1:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__amp1'
        time1:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__time1'
        amp2:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__amp2'
        time2:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__time2'
    ObjectPyMLOutput:
      type: string
      description: Output format
      default: 'json'
      enum: [json, text]
    ObjectHyp2000Conf:
      type: array
      items:
        type: string
      example:
      - 200 T 2000 0
      - LET 5 2 3 2 2
      - H71 1 1 3
      - STA './all_stations.hinv'
      - CRH 1 './italy.crh'
      - MAG 1 T 3 1
      - DUR -.81 2.22 0 .0011 0, 5*0, 9999 1
      - FC1 'D' 2 'HHZ' 'EHZ'
      - PRE 7, 3 0 4 9, 5 6 4 9, 1 1 0 9, 2 1 0 9, 4 4 4 9, 3 0 0
        9, 4 0 0 9
      - RMS 4 .40 2 4
      - ERR .10
      - POS 1.78
      - REP T T
      - JUN T
      - MIN 4
      - NET 4
      - ZTR 5 T
      - DIS 6 100 1. 7.
      - DAM 7 30 0.5 0.9 0.005 0.02 0.6 100 500
      - WET 1. .75 .5 .25
      - ERF T
      - TOP F
      - LST 1 1 0
      - KPR 2
      - COP 5
      - CAR 3
      - PRT '../output/hypo.prt'
      - SUM '../output/hypo.sum'
      - ARC '../output/hypo.arc'
      - APP F T F
      - CON 25 0.04 0.001
      - PHS './input.arc'
      - LOC
    ObjectHyp2000Model:
      type: array
      items:
        type: string
      example:
      - Italy
      - 5.00  0.00
      - 6.00 10.00
      - 8.10 30.00
    ObjectHyp2000Output:
      type: string
      description: Output format
      default: 'prt'
      enum: [prt, json, arc, sum]
    ObjectHyp2000Phase:
      type: object
      properties:
        net:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__net'
        sta:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__sta'
        cha:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__cha'
        loc:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/scnl__loc'      
        arrival_time:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/pick__arrival_time'
        isc_code:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/arrival__isc_code'
        firstmotion:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/pick__firstmotion'
        emersio:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/pick__emersio'
        weight:
          type: integer
          description: Assigned weight code | 0=full weight, 1=3/4 weight, 2=half weight, 3=1/4 weight, 4-9=no weight
          format: int32
          enum: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
          example: 1
        amplitude:
          $ref: 'https://ingv.github.io/openapi/definitions.yaml#/components/schemas/amplitude__amp1'
        ampType:
          type: integer
          format: int32
          description: Type of the amplitude | 0=unspecified 1=Wood-Anderson 2=velocity 3=acceleration 4=no magnitude
          enum: [0, 1, 2, 3, 4]
          example: 1
          default: 4